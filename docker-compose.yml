
services:
    app:
        build:
          context: .
          dockerfile: Dockerfile
        ports:
            - "8000:8000"
        volumes:
            - ./:/app
        command: >
            sh -c "ls &&
                   python manage.py wait_for_db &&
                   python manage.py makemigrations &&
                   python manage.py migrate &&
                   python manage.py seed_db &&
                   gunicorn app.wsgi:application --bind 0.0.0.0:8000"
        environment:
            - DB_HOST=${DB_HOST}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASS=${DB_PASS}
        env_file:
            - .env
        depends_on:
            - db

    db:
        image: postgres:16-alpine
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASS}
        ports:
            - "5432:5432"
        volumes:
            - dev-db-data:/var/lib/postgresql/data

    nginx:
        build: ./nginx
        ports:
            - "80:80"
        depends_on:
            - app

    ngrok:
        build:
          context: .
          dockerfile: Dockerfile.ngrok
        ports:
          - "4040:4040"
        depends_on:
          - app
        environment:
          - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
          - NGROK_PORT=app_:${NGROK_PORT}

    redis:
        image: redislabs/rejson:latest
        ports:
          - "6379:6379"

#    celery:
#        restart: always
#        build:
#          context: .
#        command: celery -A app_ worker -l info
#        volumes:
#          - ./app:/app
#        environment:
#          - DB_HOST=db
#          - DB_NAME=app_
#          - DB_USER=postgres
#          - DB_PASS=supersecretpassword
#        depends_on:
#          - db
#          - redis
#          - app_

volumes:
    dev-db-data: